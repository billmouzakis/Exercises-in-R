#Exercises in Matrices

#Source: https://www.r-exercises.com/2015/11/28/matrix-exercises/

#Solutions: https://www.r-exercises.com/2015/12/04/matrix-exercises-solutions/

1) Create three vectors  x,y,z  with integers and each vector has 3 elements.
Combine the three vectors to become a 3×3 matrix  A  where each column 
represents a vector. Change the row names to  a,b,c.

Solution:

x = c(-1,-5,5) #first vector
y = c(10,1,17) #second vector
z = c(3,-10,5) #third vector

# There is no straight forward command in order
# to create the matrix we want with x,y,z.
# So, we have to improvise
# Hint: Every column represents a vector
# so we will use cbind function

A = cbind(x,y,z)
rownames(A) = c("a","b","c")

2) Please check your result from Exercise 1,
using  is.matrix(A). It should return  TRUE, 
if your answer is correct. Otherwise, please 
correct your answer.

Solution:

is.matrix(A)

3) Create a vector with 12 integers. Convert the vector
to a 4*3 matrix  B  using  matrix(). Please change the 
column names to  x, y, z  and row names to  a, b, c, d.

Solution:

# We will use the three vectors we created before
# and we will add just a new one

B = matrix(c(-1,-5,5,10,1,17,3,-10,5,-4,2,3), nrow = 4, ncol = 3)
dimnames(B) = list(c("a","b","c","d"),c("x","y","z"))

----------------------------------------------------------------------------------------------------------------

#Exercises in Data Frames

#Source: https://www.r-exercises.com/2016/01/04/data-frame-exercises/

#Solutions: https://www.r-exercises.com/2016/01/04/data-frame-exercises-solutions/

1)Create the following data frame,afterwards invert Sex for all individuals

		Age	Height	Weight	Sex
Alex		25	177	57	F
Lilly		31	163	69	F
Mark		23	190	83	M	
Oliver		52	179	75	M
Martha		76	163	70	F
Lucas		49	183	83	M
Caroline	26	164	53	F

Solution:

a = c(25,31,23,52,76,49,26)
b = c(177,163,190,179,163,183,164)
c = c(57,69,83,75,70,83,53)

df = data.frame(Age = a,Height = b,Weight = c)
rownames(df)=c("Alex","Lilly","Mark","Oliver","Martha","Lucas","Caroline")

e = c("F","F","M","M","F","M","F")
df = cbind(df,Sex = e)

2)Create this data frame (make sure you import the variable Working as character and not factor).

		Working
Alex		Yes
Lilly		No
Mark		No	
Oliver		Yes
Martha		Yes
Lucas		No
Caroline	Yes

Add this data frame column-wise to the previous one
a)How many rows and columns does the new data frame have?
b)What class of data is in each column?

Solution:

d = c("Yes","No","No","Yes","Yes","No","Yes")
df = cbind(df, Working = d)
dim(df) #for a
laplly(df,class) #for b

3)Check what class of data is the (built-in data set) state.center and convert it to data frame

class(sta.center) #It is a list and we haven't been occupied with lists

4)Create a simple data frame from 3 vectors. Order the entire data frame by the first column.

Solution:
#When we will create 3 vectors then we will write

#we will not use attach
df[order(df$name_of_the_first_column),] #watch out this creates a new data frame and doesn't change the initial

5)Create a data frame from a matrix of your choice, change the row 
names so every row says id_i (where i is the row number) and change the 
column names to variable_i (where i is the column number). I.e., for 
column 1 it will say variable_1, and for row 2 will say id_2 and so on.

Solution:

#When we will create the data frame we will write
rownames(df) = c("id_1","id_2", and so on) #this is for rows
colnames(df) = c("Variable_1,"Variable_2", and so on) #this is for columns

6)For this exercise, we’ll use the (built-in) dataset VADeaths.

a)Make sure the object is a data frame, if not change it to a data frame
b)Create a new variable, named Total, which is the sum of each row.
c)Change the order of the columns so total is the first variable.

Solution

class(VADeaths) #for a
df = as.data.frame(VADeaths) #in order to transform VADeaths to a data frame
df = cbind(df,Total = rowSums(df))
df[,c(5,1,2,3,4)] # watch out this creates a new data frame and doesn't change the initial

7)For this exercise we’ll use the (built-in) dataset state.x77.

a)Make sure the object is a data frame, if not change it to a data frame.
b)Find out how many states have an income of less than 4300.
c)Find out which is the state with the highest income.

Solution:

class(state.x77) #for a
df = as.data.frame(state.x77)
length(df$Population < 4300) #for b
which(df$Income == max(df$Income)) #for c

8)With the dataset swiss, create a data frame of only the rows
1, 2, 3, 10, 11, 12 and 13, and only the variables Examination, 
Education and Infant.Mortality.

a) The infant mortality of Sarine is wrong, it should be a NA, change it.
b) Create a row that will be the total sum of the column, name it Total.
c) Create a new variable that will be the proportion of Examination (Examination / Total)

Solution:

df = swiss[c(1,2,3,10,11,12),c(3,4,6)] # creation of the data frame we will work on
df$Infant.Mortality[4]=NA #for a
df = rbind(df, Total=colSums(df)) # watch out this changes th initial data frame
a = df$Examination/(df[7,1]); # we can multiply with 100 in order to show the percentage
df = cbind(df,Prop_of_Exam = a) # watch out this changes th initial data frame

----------------------------------------------------------------------------------------------------------------

#Exercises in plots

#Source: https://www.r-exercises.com/2016/03/11/start-plotting-data-3/

#Answers: https://www.r-exercises.com/2016/03/11/start-plotting-data-solutions/

# We will use mtcars dataset

1)Do the plot of miles per galon(mpg) and Rear axle ratio(drat)

#Solution:

attach(mtcars) #in order to be able to work straight with the variables
# In the next exercises we will consider that this command is already 
# written and we will not mention it

plot(mpg,drat)

2)Do the plot of mpg and drat so as points are connected with lines

#Solution:

plot(mpg,drat,type = "l")

3)Do the plot of mpg and drat and change the colour of the blank dots

#Solution:

plot(mpg,drat,col=2) # I chose red

3)Do the plot of mpg and drat and add the plot mpg and weight in the
initial plot.Distinguish every plot with any colours you want.

plot(mpg,drat,col=2) # the plot of mpg and drat with red colour
points(mpg,wt,col=3) # we add the plot of mpg and wt with green colour

----------------------------------------------------------------------------------------------------------------

#Exercises in files

#Source: https://www.r-exercises.com/2016/01/07/reading-delimited-data/

#You need this source in order to load the files

#Answers: https://www.r-exercises.com/2016/01/07/reading-delimited-data-solutions/

1)Read the file Table0.txt

a) Change the names of the columns to Name, Age, Height, Weight and Sex.
b) Change the row names so that they are the same as Name, and remove the variable Name.

#Solution:

data1 = c("C:/Users/e-mashine/Desktop/Table0.txt") #I didn't put header = TRUE
# because it will consider the elements of the first row as columns
# data1 is a data frame
colnames(data1) = c("Name","Age","Height","Weight","Sex") #for a
rownames(data1) = data1$Name
data = data1[,-1] # we assign this to a new variable because this command
# doen't do changes in the initial
